trigger ContactMaxApplicationDate on Application__c (after delete, after insert, after update) {
 
  set <Id> contactIds = new set<Id>();
 
  if(trigger.isInsert || trigger.isUpdate){
    for(Application__c ap : trigger.new){
        if(ap.Contact__c != null)
            contactIds.add(ap.Contact__c);
    }
  }
 
  if(trigger.isDelete){
    for(Application__c ap : trigger.old){
        if(ap.Contact__c != null)
            contactIds.add(ap.Contact__c);
    }
  }

  Map<Id, Id>  contactMap =new  Map<Id, Id>() ;
  Map <id, Application__c> appMap = new Map <Id, Application__c>();
 List<Application__c> applications= [select 
  Id, 
  U_S_Social_Security_Number__c,
  Contact__c,
  CreatedDate,
  Signature_Date__c,
  Signature_SS__c,
  Major__c ,
  Admit_Term__c ,
  Admit_Year__c ,
  Enrollment_Type__c ,
  Student_Level__c,
  City__c ,
  State__c ,
  Street_Address_1__c ,
  Nation__c ,
  Zip_Code__c ,
  Telephone_Number__c ,
  Email_Address__c,
  Planned_Program__c,
  Date_of_Birth__c,
  Gender__c,
  Special_Admission_Consideration__c,
  Displinary_Action__c,
  Street_Apt__c,
  Violation_of_Law__c,
  United_States_Resident__c,
  United_States_Citizen__c,
  Nation_of_Citizenship__c
                                     
  from Application__c 
  where Contact__c IN :contactIds Order By CreatedDate ASC];
    
  for(Application__c app : applications){
      contactMap.put((Id)app.get('Contact__c'),app.Id);
      appMap.put ((Id)app.Id, app);

  }
 
  List<Contact> contactToUpdate = new List<Contact>();
  
  for(Contact co : [Select 
  Id, 
  Latest_Application__c,
  Latest_Application_Not_Null__c,
  Social_Security_Number__c,
  Status__c,
  Major__c,
  Start_Term__c,
  Start_Year__c,
  Applicant_Date__c,
  UG_Student_Type__c,
  Student_Level__c,
  MailingCity,
  MailingState,
  MailingStreet,
  MailingCountry,
  MailingPostalCode,
  Phone,
  Email,
  Planned_Program__c,
  Birthdate,
  Gender__c,
  Special_Admission_Consideration__c,
  Displinary_Action__c,
  Violation_of_Law__c,
  United_States_Resident__c,
  United_States_Citizen__c,
  Nation_of_Citizenship__c

  from Contact 
  where Id IN :contactIds]){
      
    co.Latest_Application__c = contactMap.get(co.Id);
      
    if (null!=co.Latest_Application__c)
    {
      //  co.Social_Security_Number__c = appMap.get(contactMap.get(co.Id)).U_S_Social_Security_Number__c;
      //  co.Status__c = 'Applicant';
      
      //System.debug( 'value :' + co.Id);
        
      string tempString1 = appMap.get(contactMap.get(co.Id)).Planned_Program__c;
      If(tempString1!=null && tempString1 != co.Planned_Program__c){
        co.Planned_Program__c = tempString1;
      }
      
      string tempString2 = appMap.get(contactMap.get(co.Id)).Gender__c;
      IF(tempString2!=null && tempString2 != co.Gender__c){
        co.Gender__c = tempString2;
      }
        
      Date tempDate1 = appMap.get(contactMap.get(co.Id)).Date_of_Birth__c;
      IF(tempDate1!=null && tempDate1 != co.Birthdate){
        co.Birthdate = tempDate1;
      }
        
      string tempString3 = appMap.get(contactMap.get(co.Id)).Major__c;
      IF(tempString3!=null && tempString3 != co.Major__c){
        co.Major__c = tempString3;
      }
        
      string tempString4 = appMap.get(contactMap.get(co.Id)).Admit_Term__c; 
      IF(tempString4!=null && tempString4 != co.Start_Term__c){
        co.Start_Term__c = tempString4;
      }
        
      string tempString5 = appMap.get(contactMap.get(co.Id)).Admit_Year__c;
      IF(tempString5!=null && tempString5 != co.Start_Year__c){
        co.Start_Year__c = tempString5;
      }
        
      string tempString6 = appMap.get(contactMap.get(co.Id)).Enrollment_Type__c;
      // co.Applicant_Date__c = appMap.get(contactMap.get(co.Id)).Signature_Date__c;
      IF(tempString6!=null && tempString6 != co.UG_Student_Type__c){
        co.UG_Student_Type__c = tempString6;
      }
        
      string tempString7 = appMap.get(contactMap.get(co.Id)).Student_Level__c;
      IF(tempString7!=null && tempString7 != co.Student_Level__c){
        co.Student_Level__c = tempString7;
      }
       
      // co.MailingCity = appMap.get(contactMap.get(co.Id)).City__c;
      // co.MailingState = appMap.get(contactMap.get(co.Id)).State__c;
      // co.MailingStreet = appMap.get(contactMap.get(co.Id)).Street_Apt__c;
      // co.MailingCountry = appMap.get(contactMap.get(co.Id)).Nation__c;
      // co.MailingPostalCode = appMap.get(contactMap.get(co.Id)).Zip_Code__c;
      // co.Phone = appMap.get(contactMap.get(co.Id)).Telephone_Number__c;
      // co.Email = appMap.get(contactMap.get(co.Id)).Email_Address__c;
       
       
      boolean tempBoolean1 = appMap.get(contactMap.get(co.Id)).Special_Admission_Consideration__c;      
      IF(tempBoolean1!=null && tempBoolean1 != co.Special_Admission_Consideration__c){
        co.Special_Admission_Consideration__c = tempBoolean1;
      }
      
      boolean tempBoolean2 = appMap.get(contactMap.get(co.Id)).Displinary_Action__c;
      IF(tempBoolean2!=null && tempBoolean2 != co.Displinary_Action__c){
        co.Displinary_Action__c = tempBoolean2;
      }
      
      boolean tempBoolean3 = appMap.get(contactMap.get(co.Id)).Violation_of_Law__c;
      IF(tempBoolean3!=null && tempBoolean3 != co.Violation_of_Law__c){
        co.Violation_of_Law__c = tempBoolean3;
      }
      
      boolean tempBoolean4 = appMap.get(contactMap.get(co.Id)).United_States_Resident__c;
      IF(tempBoolean4!=null && tempBoolean4 != co.United_States_Resident__c){
        co.United_States_Resident__c = tempBoolean4;
      }
      
      boolean tempBoolean5 = appMap.get(contactMap.get(co.Id)).United_States_Citizen__c;
      IF(tempBoolean5!=null && tempBoolean5 != co.United_States_Citizen__c){
        co.United_States_Citizen__c = tempBoolean5;
      }
      
      string tempString8 = appMap.get(contactMap.get(co.Id)).Nation_of_Citizenship__c;
      IF(tempString8!=null && tempString8 != co.Nation_of_Citizenship__c){
        co.Nation_of_Citizenship__c = tempString8;
      }
        
      //System.debug('MYTESTING: ' + co);
      contactToUpdate.add(co);
    } //End of if
  }
   update contactToUpdate;
  
}